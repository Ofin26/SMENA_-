import random as rand
import telebot
from telebot import types

API_TOKEN = '7433584102:AAEge5rGgkRgCHwGcgceDaxzOG1cXI177pk'

bot=telebot.TeleBot(API_TOKEN)

def make_matrics(m):
    mass = []
    for i in range(m):
        mass.append([])
    return mass

def trans_matrics(mass, m, n):
    trans_matric = make_matrics(n)
    for i in range(n):
        for j in range(m):
            trans_matric[i].append(mass[j][i])
    return trans_matric

def check(matric):
    if ((matric[1][1] == matric[0][0]) and (matric[1][1] == matric[2][2]) and matric[1][1] != ".") or ((matric[1][1] == matric[2][0]) and (matric[1][1] == matric[0][2]) and matric[1][1] != ".") or ((matric[1][1] == matric[1][0]) and (matric[1][1] == matric[1][2]) and matric[1][1] != ".") or ((matric[1][1] == matric[0][1]) and (matric[1][1] == matric[2][1]) and matric[1][1] != "."):
        return True
    elif matric[0].count("o") == 3 or matric[0].count("x") == 3:
        return True
    elif matric[1].count("o") == 3 or matric[1].count("x") == 3:
        return True
    elif matric[2].count("o") == 3 or matric[2].count("x") == 3:
        return True
    elif trans_matrics(matric, 3, 3)[0].count("o") == 3 or trans_matrics(matric, 3, 3)[0].count("x") == 3:
        return True
    elif trans_matrics(matric, 3, 3)[1].count("o") == 3 or trans_matrics(matric, 3, 3)[1].count("x") == 3:
        return True
    elif trans_matrics(matric, 3, 3)[2].count("o") == 3 or trans_matrics(matric, 3, 3)[2].count("x") == 3:
           return True
    else:
        return False


def add_in_matric(matric, m, n, sign):
    while (matric[m-1][n-1] != ".") and m <=3 and n <=3:
        return False
    matric[m-1][n-1] = sign
    return True

def button_matric(a):
    if a == 1:
        return [0, 0]
    if a == 2:
        return [0, 1]
    if a == 1:
        return [0, 2]
    if a == 1:
        return [1, 0]
    if a == 1:
        return [1, 1]
    if a == 1:
        return [1, 2]
    if a == 1:
        return [2, 0]
    if a == 1:
        return [2, 1]
    if a == 1:
        return [2, 2]

matric = [[".", ".", "."],
         [".", ".", "."],
         [".", ".", "."]]

player_sign = "x"
comp_sign = "o"

@bot.message_handler(commands=['start','help'])
def send_welcome(message):
    markup=types.ReplyKeyboardMarkup(resize_keyboard=True)
    item1=types.KeyboardButton("1")
    item2=types.KeyboardButton("2")
    item3=types.KeyboardButton("3")
    item4=types.KeyboardButton("4")
    item5=types.KeyboardButton("5")
    item6=types.KeyboardButton("6")
    item7=types.KeyboardButton("7")
    item8=types.KeyboardButton("8")
    item9=types.KeyboardButton("9")
    markup.add(item1, item2, item3, item4, item5, item6, item7, item8, item9)

@bot.message_handler(content_types=['text'])
def send_text(message):
    while True:
        m = button_matric(message.text)[0]
        n = button_matric(message.text)[1]
        while add_in_matric(matric, m, n, "x") == False:
            bot.send_message(message.chat.id, "Данная клетка занята, попробуйте ещё раз")
            m = button_matric(message.text)[0]
            n = button_matric(message.text)[1]

        for i in matric:
            bot.send_message(message.chat.id, str(i))

        if check(matric) == True:
            bot.send_message(message.chat.id, "Победил игрок")
            exit()

        m = rand.randint(1, 3)
        n = rand.randint(1, 3)
        while add_in_matric(matric, m, n, "o") == False:
            m = rand.randint(1, 3)
            n = rand.randint(1, 3)

        if check(matric) == True:
            bot.send_message(message.chat.id, "Победил бот")
            exit()
        bot.send_message(message.chat.id, "Ход бота: ")
        for i in matric:
            bot.send_message(message.chat.id, str(i))

bot.infinity_polling()
